{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Endpoints",
      "description": "User and Product endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint para obter a lista de usuários.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários encontrada.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint para cadastrar um usuário.",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "description": "Adicionando um novo usuário.",
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário cadastrado."
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do usuário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Usuário não encontrado."
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint para atualizar um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do usuário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "User",
            "in": "body",
            "description": "Adicionando um novo usuário.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Usuário atualizado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint para remover um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do usuário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Usuário removido com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para obter a lista de produtos.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos encontrada.",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para cadastrar um produto.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Product",
            "in": "body",
            "description": "Adicionando um novo produto.",
            "schema": {
              "$ref": "#/definitions/AddProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Produto cadastrado."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para obter um produto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do produto"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Produto não encontrado."
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para atualizar um produto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do produto"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Product",
            "in": "body",
            "description": "Adicionando um novo produto.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produto atualizado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint para remover um produto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do produto"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Produto removido com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      }
    },
    "/login/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para login de usuários.",
        "parameters": [
          {
            "name": "Credentials",
            "in": "body",
            "description": "Autenticando um usuário.",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado com succeso."
          },
          "401": {
            "description": "Senha incorreta."
          },
          "404": {
            "description": "Usuário não encontrado."
          },
          "500": {
            "description": "Problemas com o servidor."
          }
        }
      }
    }
  },
  "definitions": {
    "UserCredentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "email@email.com"
        },
        "password": {
          "type": "string",
          "example": "123@4"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Fulano de Tal"
        },
        "profession": {
          "type": "string",
          "example": "Administrador"
        },
        "birthDate": {
          "type": "string",
          "example": "1980-09-29"
        },
        "documentNumber": {
          "type": "string",
          "example": "01234567890"
        },
        "phone": {
          "type": "string",
          "example": "11985476932"
        },
        "email": {
          "type": "string",
          "example": "email@email.com"
        },
        "password": {
          "type": "string",
          "example": "123@4"
        },
        "address": {
          "type": "object",
          "properties": {
            "zipCode": {
              "type": "string",
              "example": "42800049"
            },
            "street": {
              "type": "string",
              "example": "Rua Costa Pinto"
            },
            "number": {
              "type": "number",
              "example": 254
            },
            "complement": {},
            "neighborhood": {
              "type": "string",
              "example": "Centro"
            },
            "city": {
              "type": "string",
              "example": "Camaçari"
            },
            "state": {
              "type": "string",
              "example": "BA"
            }
          }
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Fulano de Tal"
        },
        "profession": {
          "type": "string",
          "example": "Administrador"
        },
        "birthDate": {
          "type": "string",
          "example": "1980-09-29"
        },
        "documentNumber": {
          "type": "string",
          "example": "01234567890"
        },
        "phone": {
          "type": "string",
          "example": "11985476932"
        },
        "email": {
          "type": "string",
          "example": "email@email.com"
        },
        "password": {
          "type": "string",
          "example": "123@4"
        },
        "address": {
          "type": "object",
          "properties": {
            "zipCode": {
              "type": "string",
              "example": "42800049"
            },
            "street": {
              "type": "string",
              "example": "Rua Costa Pinto"
            },
            "number": {
              "type": "number",
              "example": 254
            },
            "complement": {},
            "neighborhood": {
              "type": "string",
              "example": "Centro"
            },
            "city": {
              "type": "string",
              "example": "Camaçari"
            },
            "state": {
              "type": "string",
              "example": "BA"
            }
          }
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Smartphone Sony"
        },
        "categoryId": {
          "type": "number",
          "example": 1
        },
        "price": {
          "type": "number",
          "example": 1000
        },
        "quantity": {
          "type": "number",
          "example": 10
        }
      }
    },
    "AddProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Smartphone Sony"
        },
        "categoryId": {
          "type": "number",
          "example": 1
        },
        "price": {
          "type": "number",
          "example": 1000
        },
        "quantity": {
          "type": "number",
          "example": 10
        }
      }
    },
    "Products": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Product"
      }
    }
  }
}